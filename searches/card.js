const { HEARTHSTONE_API_URL } = require("../constants");

// find a particular card by name
const perform = async (z, bundle) => {
  // Convert a boolean "collectible" to an integer as required by the API
  if (bundle.inputData.collectible) {
    bundle.inputData.collectible =
      bundle.inputData.collectible === true ? 1 : 0;
  }

  const response = await z.request({
    url: `${HEARTHSTONE_API_URL}/cards`,
    params: {
      locale: bundle.inputData.locale,
      class: bundle.inputData.class,
      textFilter: bundle.inputData.textFilter,
      manaCost: bundle.inputData.manaCost,
      attack: bundle.inputData.attack,
      health: bundle.inputData.health,
      collectible: bundle.inputData.collectible,
      rarity: bundle.inputData.rarity,
      type: bundle.inputData.type,
      minionType: bundle.inputData.minionType,
    },
  });

  return response.data.cards;
};

module.exports = {
  // see here for a full list of available properties:
  // https://github.com/zapier/zapier-platform/blob/main/packages/schema/docs/build/schema.md#searchschema
  key: "card",
  noun: "Card",

  display: {
    label: "Find Card",
    description: "Finds a card based on various filters.",
  },

  operation: {
    perform,

    inputFields: [
      {
        key: "textFilter",
        required: true,
        label: "Text Filter for the Card",
        helpText:
          "Find the Card that contains this text somewhere in its content.",
      },
      {
        key: "locale",
        required: false,
        default: "en_US",
        choices: {
          de_DE: "German",
          en_US: "American English",
          es_ES: "Spanish",
          es_MX: "Spanish (Mexico)",
          fr_FR: "French",
          it_IT: "Italian",
          ja_JP: "Japanese",
          ko_KR: "Korean",
          pl_PL: "Polish",
          pt_BR: "Portuguese (Brazil)",
          ru_RU: "Russian",
          th_TH: "Thai",
          zh_TW: "Chinese (Taiwan)",
        },
        label: "Data Locale",
        helpText: "Return localized data in this locale.",
      },
      {
        key: "class",
        required: false,
        choices: {
          neutral: "Neutral",
          deathknight: "Death Knight",
          demonhunter: "Demon Hunter",
          druid: "Druid",
          hunter: "Hunter",
          mage: "Mage",
          paladin: "Paladin",
          priest: "Priest",
          rogue: "Rogue",
          shaman: "Shaman",
          warlock: "Warlock",
          warrior: "Warrior",
        },
        helpText: "Search for cards in the specified class.",
      },
      {
        key: "manaCost",
        required: false,
        label: "Mana Cost for the Card",
        helpText: "Find the Card that has this mana cost.",
        type: "integer",
      },
      {
        key: "attack",
        required: false,
        label: "Attack for the Card",
        helpText: "Find the Card that has this attack value.",
        type: "integer",
      },
      {
        key: "health",
        required: false,
        label: "Health for the Card",
        helpText: "Find the Card that has this health value.",
        type: "integer",
      },
      {
        key: "collectible",
        required: false,
        label: "Collectible for the Card",
        helpText: "Filter depending on if the Card that is collectible or not.",
        type: "boolean",
      },
      {
        key: "rarity",
        required: false,
        label: "Rarity for the Card",
        helpText: "Find the Card that has this rarity.",
        choices: {
          1: "Common",
          2: "Free",
          3: "Rare",
          4: "Epic",
          5: "Legendary",
        },
      },
      {
        key: "type",
        required: false,
        label: "Type for the Card",
        helpText: "Find the Card that has this type.",
        choices: {
          hero: "Hero",
          minion: "Minion",
          spell: "Spell",
          weapon: "Weapon",
          "hero power": "HeroPower",
          location: "Location",
          baconquestreward: "Reward",
        },
      },
      {
        key: "minionType",
        required: false,
        label: "Minion Type for the Card",
        helpText: "Find the Card that has this minion type.",
        choices: {
          bloodelf: "Blood Elf",
          draenei: "Draenei",
          dwarf: "Dwarf",
          gnome: "Gnome",
          human: "Human",
          nightelf: "Night Elf",
          orc: "Orc",
          tauren: "Tauren",
          troll: "Troll",
          undead: "Undead",
          murloc: "Murloc",
          demon: "Demon",
          mech: "Mech",
          elemental: "Elemental",
          beast: "Beast",
          totem: "Totem",
          pirate: "Pirate",
          dragon: "Dragon",
          all: "All",
          quilboar: "Quilboar",
          halforc: "Half-Orc",
          naga: "Naga",
          oldgod: "Old God",
          pandaren: "Pandaren",
          gronn: "Gronn",
        },
      },
      {
        key: "keyword",
        required: false,
        label: "Keyword for the Card",
        helpText: "Find the Card that has this keyword.",
        choices: {
          1: "Taunt",
          2: "Spell Damage",
          3: "Divine Shield",
          4: "Charge",
          5: "Secret",
          6: "Stealth",
          8: "Battlecry",
          10: "Freeze",
          11: "Windfury",
          12: "Deathrattle",
          13: "Combo",
          14: "Overload",
          15: "Silence",
          16: "Counter",
          17: "Immune",
          19: "Spare Parts",
          20: "Inspire",
          21: "Discover",
          31: "Quest",
          32: "Poisonous",
          34: "Adapt",
          38: "Lifesteal",
          39: "Recruit",
          52: "Echo",
          53: "Rush",
          61: "Overkill",
          64: "Start of Game",
          66: "Magnetic",
          71: "Lackey",
          76: "Twinspell",
          77: "Mega-Windfury",
          78: "Reborn",
          79: "Invoke",
          86: "Outcast",
          88: "Spellburst",
          89: "Sidequest",
          91: "Corrupt",
          92: "Start of Combat",
          96: "Questline",
          97: "Tradeable",
          99: "Frenzy",
          100: "Honorable Kill",
          104: "Nature Spell Damage",
          109: "Blood Gem",
          196: "Refresh",
          198: "Avenge (X)",
          231: "Colossal +X",
          232: "Dredge",
          234: "Spellcraft",
          235: "Allied",
          238: "Infuse",
          247: "Corpse",
          252: "Stealth",
          255: "Finale",
          256: "Overheal",
          257: "Manathirst (X)",
          261: "Venomous",
          266: "Forge",
          270: "Titan",
        },
      },
      {
        key: "set",
        required: false,
        label: "Set that the Card belongs to",
        helpText: "Find the Card that belongs to this set.",
        choices: {
          "path-of-arthas": "Path of Arthas",
          titans: "TITANS",
          "festival-of-legends": "Festival of Legends",
          "march-of-the-lich-king": "March of the Lich King",
          "murder-at-castle-nathria": "Murder at Castle Nathria",
          "voyage-to-the-sunken-city": "Voyage to the Sunken City",
          core: "Core",
          legacy: "Legacy",
          "fractured-in-alterac-valley": "Fractured in Alterac Valley",
          "united-in-stormwind": "United in Stormwind",
          "forged-in-the-barrens": "Forged in the Barrens",
          "classic-cards": "Classic Cards",
          "madness-at-the-darkmoon-faire": "Madness at the Darkmoon Faire",
          "scholomance-academy": "Scholomance Academy",
          "demonhunter-initiate": "Demon Hunter Initiate",
          "ashes-of-outland": "Ashes of Outland",
          "galakronds-awakening": "Galakrond’s Awakening",
          "descent-of-dragons": "Descent of Dragons",
          "saviors-of-uldum": "Saviors of Uldum",
          "rise-of-shadows": "Rise of Shadows",
          "rastakhans-rumble": "Rastakhan’s Rumble",
          "the-boomsday-project": "The Boomsday Project",
          "the-witchwood": "The Witchwood",
          "kobolds-and-catacombs": "Kobolds and Catacombs",
          "knights-of-the-frozen-throne": "Knights of the Frozen Throne",
          "journey-to-ungoro": "Journey to Un’Goro",
          "mean-streets-of-gadgetzan": "Mean Streets of Gadgetzan",
          "one-night-in-karazhan": "One Night in Karazhan",
          "whispers-of-the-old-gods": "Whispers of the Old Gods",
          "league-of-explorers": "League of Explorers",
          "the-grand-tournament": "The Grand Tournament",
          "blackrock-mountain": "Blackrock Mountain",
          "goblins-vs-gnomes": "Goblins vs Gnomes",
          naxxramas: "Curse of Naxxramas",
        },
      },
    ],

    sample: {
      id: 63374,
      collectible: 1,
      slug: "63374-whetstone-hatchet",
      classId: 10,
      cardTypeId: 7,
      cardSetId: 1525,
      rarityId: 3,
      artistName: "Luca Zontini",
      attack: 1,
      manaCost: 1,
      durability: 4,
      name: "Whetstone Hatchet",
      text: "After your hero attacks, give a minion in your hand +1 Attack.",
      image:
        "https://d15f34w2p8l1cc.cloudfront.net/hearthstone/f9a83190455369908595cf241b225a406a606d0e8cf44077ea05faf28f1b2cd3.png",
      imageGold: "",
      flavorText: "A bad hatchet can make a good spear better.",
      cropImage:
        "https://d15f34w2p8l1cc.cloudfront.net/hearthstone/a416d77346ef1181de8af841a6dbb9c1bc7c2a16947504c0be6685d91881b785.png",
      parentId: 63374,
    },

    outputFields: [
      { key: "id", label: "Unique ID for Card" },
      { key: "collectible", label: "Whether the Card is collectible or not" },
      { key: "slug", label: "The slug for the Card" },
      { key: "classId", label: "The ID of the class the Card belongs to" },
      { key: "cardTypeId", label: "The ID of the type of Card" },
      { key: "cardSetId", label: "The ID of the set the Card belongs to" },
      { key: "rarityId", label: "The ID of the rarity of the Card" },
      {
        key: "artistName",
        label: "The name of the artist who drew the Card illustration",
      },
      { key: "attack", label: "The attack value of the Card" },
      { key: "manaCost", label: "The mana cost of the Card" },
      { key: "durability", label: "The durability of the Card" },
      { key: "name", label: "The name of the Card" },
      { key: "text", label: "The text of the Card that describes its effects" },
      { key: "image", label: "The URL for the Card's main image" },
      { key: "imageGold", label: "The URL for the Card's golden image" },
      { key: "flavorText", label: "The flavor text of the Card" },
      { key: "cropImage", label: "The URL for the Card's cropped image" },
      { key: "parentId", label: "The ID of the parent Card, if it has one" },
    ],
  },
};
